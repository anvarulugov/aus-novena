!function(){"use strict";const{withSelect:e}=wp.data,{Component:t}=wp.element,{__:a}=wp.i18n,{withInstanceId:o,compose:n}=wp.compose,{SelectControl:l}=wp.components,p=["pages","media","blocks","lazyblocks","lazyblocks_templates"];var y=n([o,e(((e,t)=>{let a="",o="",n={per_page:-1};return"post"===t.entityType?(a="postType",o=t.postType||"post"):"page"===t.entityType?(a="postType",o="page"):"taxonomy"===t.entityType&&(a="taxonomy",o=t.taxonomyType||"category"),("page"===t.entityType||"taxonomy"===t.entityType&&"tag"!==t.taxonomyType)&&t.parentEntity&&(n.parent=t.parentEntity),"post-type"===t.entityType?{items:e("core").getPostTypes()}:"taxonomy-type"===t.entityType?{items:e("core").getTaxonomies()}:{items:e("core").getEntityRecords(a,o,n)}}))])(class extends t{render(){const{label:e,value:t,help:o,entityType:n,onChange:y=(()=>{}),items:s}=this.props;let i=[];if(s)if(0===s.length)i.push({value:"",label:a("No items found","lzb-select-dynamic")});else{for(const e of s)"post"===n||"page"===n?i.push({label:e.title.rendered,value:e.id}):"taxonomy"===n?i.push({label:e.name,value:e.id}):"post-type"===n?-1===p.indexOf(e.rest_base)&&i.push({label:e.labels.singular_name,value:e.slug}):"taxonomy-type"===n&&i.push({label:e.labels.singular_name,value:e.slug});i=[{value:"",label:a("Please Select","lzb-select-dynamic")},...i]}else i.push({value:"",label:a("Loading..","lzb-select-dynamic")});return React.createElement("div",{className:"ww-lzb-control_select_dynamic"},React.createElement(l,{label:e,options:i,help:o,value:t,className:"lzb-gutenberg-select",onChange:e=>{y(e)}}))}});const{addFilter:s}=wp.hooks,{__:i}=wp.i18n,{Fragment:m}=wp.element,{PanelBody:c,BaseControl:r,RadioControl:d}=wp.components;s("lzb.editor.control.select_dynamic.render","lzb.editor",((e,t)=>React.createElement(y,{label:t.data.label,help:t.data.help,entityType:t.data.entity_type,postType:t.data.post_type,taxonomyType:t.data.taxonomy_type,parentEntity:t.data.parent_entity,value:t.getValue(),onChange:t.onChange}))),s("lzb.constructor.control.select_dynamic.settings","lzb.constructor",((e,t)=>{const{updateData:a,data:o}=t;return React.createElement(m,null,React.createElement(c,null,React.createElement(r,{label:i("Entity Type","lzb-select-dynamic"),help:i("Allows you to select the entity type to render as select options","lzb-select-dynamic")},React.createElement(d,{options:[{label:i("Post Type","lzb-select-dynamic"),value:"post-type"},{label:i("Taxonomy Type","lzb-select-dynamic"),value:"taxonomy-type"},{label:i("Post","lzb-select-dynamic"),value:"post"},{label:i("Page","lzb-select-dynamic"),value:"page"},{label:i("Taxonomy","lzb-select-dynamic"),value:"taxonomy"}],selected:o.entity_type||"",onChange:e=>a({entity_type:e})})),t.data.entity_type&&"post"===t.data.entity_type&&React.createElement(r,{label:i("Post type","lzb-select-dynamic"),help:i('Allows you to select a custom post type. Defaults to "Post" if nothing is selected',"lzb-select-dynamic")},React.createElement(y,{entityType:"post-type",value:t.data.post_type,onChange:e=>a({post_type:e})})),t.data.entity_type&&"taxonomy"===t.data.entity_type&&React.createElement(r,{label:i("Taxonomy type","lzb-select-dynamic"),help:i('Allows you to select a taxonomy type. Defaults to "Category" if nothing is selected',"lzb-select-dynamic")},React.createElement(y,{entityType:"taxonomy-type",value:t.data.taxonomy_type,onChange:e=>a({taxonomy_type:e})})),(t.data.entity_type&&"page"===t.data.entity_type||t.data.taxonomy_type&&"tags"!==t.data.taxonomy_type)&&React.createElement(r,{label:i("Parent entity","lzb-select-dynamic"),help:i("Allows you to restrict the select options to a certain parent entity, otherwise leave blank","lzb-select-dynamic")},React.createElement(y,{entityType:t.data.entity_type,postType:t.data.post_type,taxonomyType:t.data.taxonomy_type,value:t.data.parent_entity,onChange:e=>a({parent_entity:e})}))))}))}();